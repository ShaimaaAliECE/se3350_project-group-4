{"version":3,"file":"static/js/881.42ab0a29.chunk.js","mappings":"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","sources":["components/PopupMenu.jsx","components/UserProfileDetails.jsx","components/UserProfile.jsx","pages/SelectAlg.js"],"sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n/**\r\n   * popup menu component : \r\n   * used as a container for pause and gameover menu\r\n    (1)、child component can be rendered within the menu\r\n    (2)、child components can close parent component (cancel button)\r\n    (3)、child component can communicate with other components (i.e. restart current level)\r\n */\r\n\r\nclass PopupMenu extends React.Component {\r\n  //popup window state\r\n  state = {\r\n    active: false, //closed by default\r\n    component: null, //empty (no child component by default)\r\n    callback: () => {},\r\n  };\r\n\r\n  // ----- Popup menu functions ----- //\r\n\r\n  //open popup window method\r\n  open = (\r\n    options = {\r\n      props: {},\r\n      component: null,\r\n      callback: () => {},\r\n    }\r\n  ) => {\r\n    const { props, component, callback } = options;\r\n    //key is always different, meaning that a new 'component' is render every time window opened.\r\n    const window_key = new Date().getTime();\r\n    // convert 'component' into a real child component\r\n    const child_component = React.createElement(component, {\r\n      ...props,\r\n      close: this.close,\r\n      restart: this.restart,\r\n      key: window_key,\r\n    });\r\n    this.setState({\r\n      active: true,\r\n      component: child_component,\r\n      callback: callback,\r\n    });\r\n  };\r\n\r\n  //close popup window method\r\n  close = (data) => {\r\n    this.setState({\r\n      active: false,\r\n    });\r\n    // save data on close\r\n    this.state.callback(data);\r\n  };\r\n\r\n  // ----- Pause Menu functions ----- //\r\n\r\n  render() {\r\n    // toggle between active/inactive using css class\r\n    const _class = {\r\n      true: \"panel-wrapper active\",\r\n      false: \"panel-wrapper\",\r\n    };\r\n\r\n    return (\r\n      <div className={_class[this.state.active]}>\r\n        {/* overlay */}\r\n        <div\r\n          className=\"over-layer\"\r\n          onClick={() => {\r\n            this.close(\"resume\");\r\n          }}\r\n        ></div>\r\n        {/* window*/}\r\n        <div className=\"window\">\r\n          <div className=\"head\">\r\n            {/* close button */}\r\n            <span\r\n              className=\"close\"\r\n              onClick={() => {\r\n                this.close(\"resume\");\r\n              }}\r\n            >\r\n              ×\r\n            </span>\r\n           \r\n            {/* mounted child component */}\r\n            {this.state.component}\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//create an empty div container\r\nconst _div = document.createElement(\"div\");\r\n//render the child component into the popup window component\r\ndocument.body.appendChild(_div);\r\nconst _popup = render(<PopupMenu />, _div);\r\nexport default _popup;\r\n","import React from \"react\";\r\n\r\n//user profile component\r\nexport default function UserProfileDetails(props) {\r\n  // logout method\r\n  const logout = () => {\r\n    global.auth.logout();\r\n    props.close(\"logout\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-content\">\r\n      <p className=\"title has-text-centered has-text-light\">User Profile</p>\r\n      <fieldset disabled>\r\n        {/* User name */}\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <label className=\"label has-text-left has-text-light\">\r\n              Username\r\n            </label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              defaultValue={props.user.username}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* user type */}\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <label className=\"label has-text-left has-text-light\">\r\n              Admin Privileges\r\n            </label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              //change user type status\r\n              defaultValue={props.user.type === 1 ? \"Yes\" : \"No\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n\r\n      <br />\r\n      <br />\r\n      <div className=\"field is-grouped is-grouped-centered\">\r\n        {/* logout button */}\r\n        <div className=\"control\">\r\n          <button\r\n            className=\"button is-danger is-medium\"\r\n            type=\"button\"\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        {/* close button */}\r\n        <div className=\"control\">\r\n          <button\r\n            className=\"button is-medium\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              props.close();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PopupMenu from \"components/PopupMenu\";\r\nimport UserProfileDetails from \"components/UserProfileDetails\";\r\n\r\n//Header components\r\nconst UserProfile = (props) => {\r\n  // fill icon with first letter of user's name\r\n  const username = props.user.username;\r\n  const initials = username.charAt(0).toUpperCase();\r\n\r\n  //open user profile detail\r\n  const toProfile = () => {\r\n    PopupMenu.open({\r\n      component: UserProfileDetails,\r\n      props: {\r\n        user: props.user,\r\n      },\r\n      callback: (data) => {\r\n        if (data === \"logout\") {\r\n          toast.success(\"Logout Successful.\");\r\n          props.history.push(\"/\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-header\">\r\n      <div className=\"grid\">\r\n        <div className=\"start\" />\r\n        <div className=\"end\">\r\n          <div className=\"user-profile-group\">\r\n            <div className=\"button user-icon is-primary\">\r\n              <span className=\"user-initial\">{initials}</span>\r\n            </div>\r\n            <span className=\"profile\" onClick={toProfile}>\r\n              Profile\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserProfile);\r\n","import React, { useMemo } from \"react\";\r\nimport UserProfile from \"components/UserProfile\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SelectAlg = (props) => {\r\n  // get decoded user info\r\n  const user = useMemo(() => {\r\n    return global.auth.getUser() || {};\r\n  }, []);\r\n\r\n  //redirect to different pages based on user type\r\n  let history = useHistory();\r\n  const selectOrEdit = () => {\r\n    if (user.type === 1) {\r\n      history.push(\"/ms/edit\");\r\n    } else {\r\n      history.push(\"/ms/select\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <UserProfile user={user} />\r\n      <div className=\"alg-wrapper\">\r\n        <div className=\"section\">\r\n          {/*  */}\r\n          <div className=\"title label has-text-light\">\r\n            <span>Hello </span>\r\n            {/* display username of user that's currently logged in */}\r\n            <span className=\"has-text-primary hvr-rotate\">{user.username}</span>,\r\n            <div>Choose an algorithm to begin...</div>\r\n          </div>\r\n          {/* dropdown */}\r\n          <div className=\"dropdown is-hoverable\">\r\n            {/* dropdown box */}\r\n            <div className=\"dropdown-trigger\">\r\n              {/* dropdown button */}\r\n              <button\r\n                className=\"button is-large is-rounded has-background-primary\"\r\n                aria-haspopup=\"true\"\r\n                aria-controls=\"dropdown-menu\"\r\n              >\r\n                {/* text */}\r\n                <span className=\"has-text-weight-semibold\">\r\n                  Select from dropdown\r\n                </span>\r\n                {/* arrow icon */}\r\n                <span className=\"icon is-small is-justify-content-flex-end\">\r\n                  <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n            {/* dropdown menu */}\r\n            <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\r\n              <div className=\"dropdown-content \">\r\n                {/* item 1 */}\r\n                <div className=\"dropdown-item\" onClick={selectOrEdit}>\r\n                  <span className=\"dropdown-text \">Merge Sort</span>\r\n                </div>\r\n                <hr className=\"dropdown-divider\"></hr>\r\n                {/* item 2 */}\r\n                <div className=\"dropdown-item\">\r\n                  <span className=\"dropdown-text\">Quick Sort</span>\r\n                </div>\r\n                <hr className=\"dropdown-divider\"></hr>\r\n                {/* item 3 */}\r\n                <div className=\"dropdown-item\">\r\n                  <span className=\"dropdown-text\">...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectAlg;\r\n"],"names":["PopupMenu","state","active","component","callback","open","options","props","window_key","Date","getTime","child_component","React","close","restart","key","setState","data","className","true","false","this","onClick","_div","document","createElement","body","appendChild","_popup","render","UserProfileDetails","disabled","type","defaultValue","user","username","global","auth","logout","withRouter","initials","charAt","toUpperCase","toast","history","push","useMemo","getUser","useHistory","id","role"],"sourceRoot":""}