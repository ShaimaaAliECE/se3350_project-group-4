{"version":3,"file":"static/js/800.ca94cbf0.chunk.js","mappings":"4MAEMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA6CH,OA7CGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAGJ,WAAU,IAAD,OACP,OACE,iBAAKC,UAAU,eAAf,WAEE,mBAAQA,UAAU,+CAAlB,UACE,cAAGA,UAAU,cAAb,uBAGF,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,YAAf,UACE,mBACEA,UAAU,0DACVC,QAAS,WACP,EAAKC,MAAMC,SAHf,uBASF,gBAAKH,UAAU,YAAf,UACE,mBACEA,UAAU,0DACVC,QAAS,WACP,EAAKC,MAAME,WAHf,wBASF,gBAAKJ,UAAU,YAAf,UACE,mBACEA,UAAU,0DACVC,QAAS,WACP,EAAKC,MAAMC,MAAM,SAHrB,8BAYT,EA7CGJ,CAAcM,EAAAA,WAgDpB,I,oBCgDA,GAAeC,EAAAA,EAAAA,KAzFK,SAACJ,GAmCnB,OACE,SAAC,IAAD,CACEK,YAAY,aACZC,aAAa,YACbC,WAAW,EAHb,UAKE,gBAAKT,UAAU,6DAAf,UACE,2BACE,eAAIA,UAAU,YAAd,UACE,wBACE,kBAAMA,UAAU,mBAAhB,mBAA0CE,EAAMQ,MAAhD,YAGJ,eAAIV,UAAU,YAAd,UACE,0BACE,iBAAMA,UAAU,gBAAhB,UACE,cAAGA,UAAU,wBAAwB,cAAY,YAEnD,6CAGJ,eAAIA,UAAU,6BAA6BC,QAnDnC,WACdU,EAAAA,EAAAA,KAAe,CACbC,UAAWb,EACXc,SAAU,SAACC,GACI,SAATA,GACFZ,EAAMa,QAAQC,KAAK,kBA8CnB,UACE,0BACE,iBAAMhB,UAAU,gBAAhB,UACE,cAAGA,UAAU,eAAe,cAAY,YAE1C,0CAGJ,eAAIA,UAAU,YAAd,UACE,0BACE,iBAAMA,UAAU,gBAAhB,UACE,cACEA,UAAU,yCACV,cAAY,YAGhB,yCAGJ,eAAIA,UAAU,YAAd,UACE,eAAGA,UAAU,oBAAb,WACE,iBAAMC,QA1DA,WACI,MAAhBC,EAAMQ,MACRR,EAAMa,QAAQC,KAAK,cACM,MAAhBd,EAAMQ,MACfR,EAAMa,QAAQC,KAAK,cACM,MAAhBd,EAAMQ,MACfR,EAAMa,QAAQC,KAAK,cACM,MAAhBd,EAAMQ,MACfR,EAAMa,QAAQC,KAAK,cACM,MAAhBd,EAAMQ,MACfR,EAAMa,QAAQC,KAAK,cACM,WAAhBd,EAAMQ,OACfR,EAAMa,QAAQC,KAAK,eA8CX,yBACA,iBAAMhB,UAAU,gBAAhB,UACE,cAAGA,UAAU,4BAA4B,cAAY,2B,wECYrE,KAAeM,EAAAA,EAAAA,KAhGE,SAACJ,GAEhB,IAAQe,EAA4Bf,EAA5Be,MAAOC,EAAqBhB,EAArBgB,KAAMC,EAAejB,EAAfiB,KAAMC,EAASlB,EAATkB,KAmB3B,OACE,gBAAKpB,UAAU,gBAAf,UACE,SAAC,IAAD,CACEO,YAAY,WACZC,aAAa,YACbC,WAAW,EAHb,UAKE,iBAAKT,UAAU,kBAAf,WAEE,gBAAKA,UAAU,sBAAf,UACE,gBAAIA,UAAU,8BAAd,WACE,cAAGA,UAAU,uBADf,UACgDiB,EADhD,oBAMF,gBAAKjB,UAAU,aAAf,UACE,4BACE,mBAAQA,UAAU,gBAAlB,UACE,gBACEqB,IAAI,+DACJC,IAAI,gBAKR,iBAAKtB,UAAU,QAAf,WACE,gBAAKA,UAAU,mCAAf,UACE,4BACE,cAAGA,UAAU,0BAAb,0BACA,cAAGA,UAAU,wBAAb,SAAsCmB,UAG1C,gBAAKnB,UAAU,mCAAf,UACE,4BACE,cAAGA,UAAU,0BAAb,2BACA,cAAGA,UAAU,wBAAb,SAAsCkB,UAG1C,gBAAKlB,UAAU,mCAAf,UACE,4BACE,cAAGA,UAAU,0BAAb,uBACA,cAAGA,UAAU,wBAAb,SAAsCoB,kBAQhD,cAAGpB,UAAU,8CAAb,kDAKA,iBAAKA,UAAU,eAAf,WACE,SAAC,KAAD,CAAMuB,GAAG,aAAT,UACE,mBAAQvB,UAAU,gDAAlB,qCAKF,mBACEA,UAAU,2DACVC,QAhFQ,WACE,IAAhBC,EAAMe,MACRf,EAAMa,QAAQC,KAAK,cACM,IAAhBd,EAAMe,MACff,EAAMa,QAAQC,KAAK,cACM,IAAhBd,EAAMe,MACff,EAAMa,QAAQC,KAAK,cACM,IAAhBd,EAAMe,MACff,EAAMa,QAAQC,KAAK,cACM,IAAhBd,EAAMe,MACff,EAAMa,QAAQC,KAAK,cACM,MAAhBd,EAAMe,OACff,EAAMa,QAAQC,KAAK,SAkEb,4C,oDCkBZ,IAtGsB,SAACd,GAErB,IAAQe,EAA+Bf,EAA/Be,MAAOO,EAAwBtB,EAAxBsB,cAAeL,EAASjB,EAATiB,KAS9B,OACE,gBAAKnB,UAAU,gBAAf,UACE,SAAC,IAAD,CACEO,YAAY,aACZC,aAAa,YACbC,WAAW,EAHb,UAKE,iBAAKT,UAAU,kBAAf,WACE,gBAAKA,UAAU,cAAf,UACE,gBAAIA,UAAU,sCAAd,WACE,cAAGA,UAAU,sBADf,uBAIF,gBAAKA,UAAU,cAAf,UACE,4BACE,mBAAQA,UAAU,gBAAlB,UACE,gBACEqB,IAAI,+DACJC,IAAI,WAGR,iBAAKtB,UAAU,QAAf,WACA,gBAAKA,UAAU,mCAAf,UACI,4BACE,cAAGA,UAAU,0BAAb,0BACA,cAAGA,UAAU,wBAAb,SAAsCiB,UAG1C,gBAAKjB,UAAU,mCAAf,UACE,4BACE,cAAGA,UAAU,0BAAb,0BACA,cAAGA,UAAU,wBAAb,SAAsCmB,UAG1C,gBAAKnB,UAAU,mCAAf,UACE,4BACE,cAAGA,UAAU,0BAAb,2BACA,cAAGA,UAAU,wBAAb,6BAQV,iBAAKA,UAAU,wDAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,oBACEA,UAAU,2CACV,gBAAc,OACd,gBAAc,gBAHhB,WAKE,2EACA,iBAAMA,UAAU,gBAAhB,UACE,cAAGA,UAAU,kBAAkB,cAAY,iBAIjD,gBAAKA,UAAU,gBAAgByB,GAAG,iBAAiBC,KAAK,OAAxD,UACE,gBAAK1B,UAAU,mBAAf,SAGGwB,UAKP,iBAAKxB,UAAU,eAAf,WACE,mBACEA,UAAU,0DACVC,QAAS,WA3EnB0B,OAAOC,KAAK,cAAe,SAC3BD,OAAOxB,QACP0B,EAAAA,EAAOC,KAAKC,UAuEJ,wBAQA,mBACE/B,UAAU,0DACVC,QAAS,WACP0B,OAAOK,SAASC,QAAO,IAH3B,iC,8DC/BZ,IAxDmB,SAAC/B,GAElB,IAAQgC,EAA+DhC,EAA/DgC,YAAajB,EAAkDf,EAAlDe,MAAOkB,EAA2CjC,EAA3CiC,KAAMC,EAAqClC,EAArCkC,WAAYC,EAAyBnC,EAAzBmC,WAAYC,EAAapC,EAAboC,SAE1D,OACE,gBAAKtC,UAAU,gBAAf,UACE,SAAC,IAAD,CACEO,YAAY,aACZC,aAAa,YACbC,WAAW,EAHb,UAKE,iBAAKT,UAAU,kBAAf,WACE,gBAAKA,UAAU,cAAf,UACE,gBAAIA,UAAU,8BAAd,8BACoBiB,QAGtB,gBAAKjB,UAAU,cAAf,UACE,4BACE,mBAAQA,UAAU,mBAAlB,iCACA,cAAGA,UAAU,2BAAb,UACE,2BACE,qCACW,KACT,iBAAMA,UAAU,mBAAhB,SAAoCsC,IAFtC,sDAIE,iBAAMtC,UAAU,mBAAhB,SAAoCoC,IAJtC,KAI2D,KACzD,iBAAMpC,UAAU,mBAAhB,SAAoCqC,IALtC,OAOCF,aAKT,cAAGnC,UAAU,8CAAb,8DAGA,iBAAKA,UAAU,eAAf,WACE,SAAC,KAAD,CAAMuB,GAAG,aAAT,UACE,mBAAQvB,UAAU,gDAAlB,qCAIF,mBACEA,UAAU,2DACVC,QAASiC,EAFX,oC,sGCnCNvB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAiDH,OAjDGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEJ4B,MAAQ,CACNC,QAAQ,EACR5B,UAAW,KACXC,SAAU,cAHJ,EASRe,KAAO,WAMD,IALJa,EAKG,uDALO,CACRvC,MAAO,GACPU,UAAW,KACXC,SAAU,cAGJX,EAA+BuC,EAA/BvC,MAAOU,EAAwB6B,EAAxB7B,UAAWC,EAAa4B,EAAb5B,SAEpB6B,GAAa,IAAIC,MAAOC,UAExBC,EAAkBxC,EAAAA,cAAoBO,GAApB,kBACnBV,GADmB,IAEtBC,MAAO,EAAKA,MACZC,QAAS,EAAKA,QACd0C,IAAKJ,KAEP,EAAKK,SAAS,CACZP,QAAQ,EACR5B,UAAWiC,EACXhC,SAAUA,KAEb,EAGDV,MAAQ,SAACW,GACP,EAAKiC,SAAS,CACZP,QAAQ,IAGV,EAAKD,MAAM1B,SAASC,IACrB,EAKDV,QAAU,WACRuB,OAAOK,SAASC,QAAO,IACxB,EAoCA,OApCA,8BAED,WAAU,IAAD,OAOP,OACE,iBAAKjC,UANQ,CACbgD,KAAM,uBACNC,MAAO,iBAIgBC,KAAKX,MAAMC,QAAlC,WAEE,gBACExC,UAAU,aACVC,QAAS,WACP,EAAKE,YAIT,gBAAKH,UAAU,SAAf,UACE,iBAAKA,UAAU,OAAf,WAEE,iBACEA,UAAU,QACVC,QAAS,WACP,EAAKE,SAHT,kBASC+C,KAAKX,MAAM3B,sBAKrB,EArFGD,CAAkBN,EAAAA,WAyFlB8C,EAAOC,SAASC,cAAc,OAEpCD,SAASjB,KAAKmB,YAAYH,GAC1B,IAAMI,GAASC,EAAAA,EAAAA,SAAO,SAAC7C,EAAD,IAAewC,GACrC,O,oDCpBA,IAhFsB,SAACjD,GACrB,IACEuD,EASEvD,EATFuD,QACAC,EAQExD,EARFwD,QACAC,EAOEzD,EAPFyD,UACAC,EAME1D,EANF0D,YACAC,EAKE3D,EALF2D,eACAC,EAIE5D,EAJF4D,eACAC,EAGE7D,EAHF6D,WACAC,EAEE9D,EAFF8D,YACAC,EACE/D,EADF+D,WAGF,OACE,4BACE,iBAAKjE,UAAU,gBAAf,UACGyD,GACC,gBAAKzD,UAAU,gCAAf,qBAEA,qBAGF,iBAAKA,UAAU,aAAf,UACGyD,GAAU,eAAIzD,UAAU,QAAd,SAAuByD,KAAgB,oBACjDC,GAAU,eAAI1D,UAAU,QAAd,SAAuB0D,KAAgB,oBACjDC,GAAY,eAAI3D,UAAU,QAAd,SAAuB2D,KAAkB,2BAI1D,SAAC,IAAD,CACEpD,YAAY,eACZC,aAAa,YACbC,WAAW,EAHb,UAKE,iBAAKT,UAAU,gCAAf,WACE,gBAAKA,UAAU,UAAf,SACG+D,GACC,oBACE/D,UAAU,6CACVC,QAAS6D,EAFX,WAIE,iBAAM9D,UAAU,gBAAhB,UACE,cAAGA,UAAU,yBAEf,sCAEA,QAEN,gBAAKA,UAAU,UAAf,SACGgE,GACC,oBACEhE,UAAU,6CACVC,QAAS2D,EAFX,WAIE,iBAAM5D,UAAU,gBAAhB,UACE,cAAGA,UAAU,qBAEf,uCAEA,QAEN,gBAAKA,UAAU,UAAf,SACGiE,GACC,oBACEjE,UAAU,6CACVC,QAAS4D,EAFX,WAIE,oCACA,iBAAM7D,UAAU,gBAAhB,UACE,cAAGA,UAAU,4BAGf,iB,8JC1ED,SAASkE,EAAMhE,GAC5B,IAAIiE,EAAK,aAET,OADmB,MAAfjE,EAAMkE,QAAeD,EAAK,KAE5B,gBAAKnE,UAAWmE,EAAIlE,QAASC,EAAMD,QAAnC,SACGC,EAAMkE,Q,4CCuRb,EArRMC,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYnE,GAAQ,IAAD,yBACjB,cAAMA,IACDqC,MAAQ,CACX+B,YAAY,EACZC,KAAM,EACNC,aAAc,GACdC,MAAOC,MAAM,IAAIC,KAAK,MACtBC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GACvEC,MAAO,GAEPC,WAAW,EACXC,gBAAgB,EAChBC,cAAc,EACdC,mBAAmB,EAGnBvE,MAAO,EACPwE,MAAO,EACP/D,KAAM,EACNiB,WAAY,EACZC,WAAY,GACZC,SAAU,IAGZ,EAAK6C,cAAgB,EAAKA,cAAcC,MAAnB,WACrB,EAAKvB,eAAiB,EAAKA,eAAeuB,MAApB,WACtB,EAAKtB,eAAiB,EAAKA,eAAesB,MAApB,WACtB,EAAKxB,YAAc,EAAKA,YAAYwB,MAAjB,WACnB,EAAKC,eAAiB,EAAKA,eAAeD,MAApB,WACtB,EAAKlD,YAAc,EAAKA,YAAYkD,MAAjB,WACnB,EAAKE,UAAY,EAAKA,UAAUF,MAAf,WACjB,EAAKG,eAAiB,EAAKA,eAAeH,MAApB,WA/BL,EAiRlB,O,mCA7OD,WAEElC,KAAKiC,gBAELjC,KAAKH,SAAS,CAAE+B,WAAW,EAAOC,gBAAgB,M,uBAKpD,WAGE7B,KAAKH,SAAS,CACZ+B,WAAW,EACXE,cAAc,EACdC,mBAAmB,M,4BAOvB,WAGE/B,KAAKH,SAAS,CACZ+B,WAAW,EACXE,cAAc,EACdC,mBAAmB,M,yBAMvB,WACE,IAAMO,EAAiB,WAErB,OACE,4BACE,iIAIA,kFAON,OAAItC,KAAKX,MAAMwC,gBAGX,SAACU,EAAA,EAAD,CACEvD,YAAagB,KAAKhB,YAClBjB,MAAOiC,KAAKX,MAAM7B,MAClByB,MAAM,SAACqD,EAAD,IACNpD,WAAYc,KAAKX,MAAMH,WACvBC,WAAYa,KAAKX,MAAMF,WACvBC,SAAUY,KAAKX,MAAMD,WAIhBY,KAAKX,MAAMyC,eAAiB9B,KAAKX,MAAM0C,mBAE9C,SAACS,EAAA,EAAD,CACEzE,MAAOiC,KAAKX,MAAM7B,MAClBQ,KAAMgC,KAAKX,MAAM2C,MACjB/D,KAAM+B,KAAKX,MAAMpB,KACjBC,KAAK,YAGA8B,KAAKX,MAAM0C,oBAAsB/B,KAAKX,MAAMyC,cAGnD,SAACW,EAAA,EAAD,CACE1E,MAAOiC,KAAKX,MAAM7B,MAClBS,KAAM+B,KAAKX,MAAMpB,YALhB,I,2BAaT,WACE,IAAIyE,EAAa,GACbC,EAAe,GACfC,EAAU,IAAIC,EAAAA,EAAU,EAAG,GAAI,IAEnCD,EAAQE,KAAKF,EAAQG,WAAYL,EAAY,GAAIC,GAAc,GAE/D3C,KAAKH,SAAS,CACZ8B,MAAOe,EACPpB,aAAcqB,M,sBAKlB,SAASK,GACPhD,KAAKH,SAAS,CAAE8B,MAAOqB,M,yBAIzB,SAAYC,GACV,IAAMC,EAAM1B,MAAM,IAAIC,KAAK,MAE3BzB,KAAKH,SAAS,CACZwB,KAFS,EAGTE,MAAO2B,EACP3C,QAAS,KACTC,QAAS,KACTC,UAAW,S,4BAKf,SAAewC,GACb,IAAMC,EAAMlD,KAAKX,MAAMkC,MAAM4B,QACzB9B,EAAOrB,KAAKX,MAAMgC,KAEtB6B,EADmBlD,KAAKX,MAAMqC,SAASL,GAAQ,GAC7BrB,KAAKX,MAAMsC,MAAMN,GAEnCA,IACArB,KAAKH,SAAS,CACZ0B,MAAO2B,EACP7B,KAAMA,EACNd,QAASP,KAAKX,MAAMiC,aAAaD,EAAO,GACxCb,QAASR,KAAKX,MAAMiC,aAAaD,GACjCZ,UAAWT,KAAKX,MAAMiC,aAAaD,EAAO,O,4BAK9C,SAAe4B,GACb,IAAMC,EAAMlD,KAAKX,MAAMkC,MAAM4B,QACzB9B,EAAOrB,KAAKX,MAAMgC,KAEtB6B,EADmBlD,KAAKX,MAAMqC,SAASL,GAAQ,GAC7BrB,KAAKX,MAAMsC,MAAMN,GAEnCA,IACArB,KAAKH,SAAS,CACZ0B,MAAO2B,EACP7B,KAAMA,EACNd,QAASP,KAAKX,MAAMiC,aAAaD,EAAO,GACxCb,QAASR,KAAKX,MAAMiC,aAAaD,GACjCZ,UAAWT,KAAKX,MAAMiC,aAAaD,EAAO,OAE7C,4BAED,WACE,IAAMM,EAAQ3B,KAAKX,MAAMsC,MAAMwB,QAAQ,QACzBC,IAAVzB,GACSA,EAAM0B,MAAM,KAClBC,KAAI,SAACC,GAER,OADAC,QAAQC,IAAIF,IACL,SAACvC,EAAD,CAAOE,MAAOqC,S,yBAM3B,SAAYG,GACV,OAAO,SAAC1C,EAAD,CAAOE,MAAOlB,KAAKX,MAAMkC,MAAMmC,EAAI,OAC3C,oBAED,WACE,OACE,yBACG1D,KAAKX,MAAMuC,UACV5B,KAAK2D,eAEL,4BACE,iBAAK7G,UAAU,cAAf,WACE,SAAC8G,EAAA,EAAD,CAAapG,MAAM,OAEnB,iBAAKV,UAAU,cAAf,WACI,gDACA,mBACEA,UAAU,gCACVC,QAASiD,KAAKoC,UAFhB,6BAMA,mBACEtF,UAAU,+BACVC,QAASiD,KAAKqC,eAFhB,6BAUN,iBAAKvF,UAAU,OAAf,WAEE,iBAAKA,UAAU,eAAf,WACE,gBAAKyB,GAAG,MAAR,SAAeyB,KAAK6D,YAAY,MAChC,iBAAKtF,GAAG,SAAR,UACGyB,KAAK6D,YAAY,GACjB7D,KAAK6D,YAAY,OAEpB,iBAAKtF,GAAG,QAAR,UACGyB,KAAK6D,YAAY,GACjB7D,KAAK6D,YAAY,GACjB7D,KAAK6D,YAAY,GACjB7D,KAAK6D,YAAY,OAEpB,iBAAKtF,GAAG,SAAR,WACE,SAACyC,EAAD,KACA,SAACA,EAAD,IACChB,KAAK6D,YAAY,GACjB7D,KAAK6D,YAAY,IAClB,SAAC7C,EAAD,KACA,SAACA,EAAD,IACChB,KAAK6D,YAAY,IACjB7D,KAAK6D,YAAY,WAGtB,gBAAK/G,UAAU,YAAf,UACE,SAACgH,EAAA,EAAD,CACEvD,QAASP,KAAKX,MAAMkB,QACpBC,QAASR,KAAKX,MAAMmB,QACpBC,UAAWT,KAAKX,MAAMoB,UACtBC,YAAaV,KAAKU,YAClBC,eAAgBX,KAAKW,eACrBC,eAAgBZ,KAAKY,eACrBC,YAAY,EACZC,aAAa,EACbC,YAAY,kBAQ3B,EAlRGI,CAAiBhE,EAAAA,Y,gGCTF4G,GAAAA,EAAAA,EAAAA,IACnB,WAAYC,EAAKC,EAAKC,GAEpB,IAFgC,eAE5BlE,KAAKmE,cAAgBJ,EACvB,MAAM,IAAIK,MAAM,+CAKhB,IAFA,IAAIC,EAAQ,GAEHX,EAAI,EAAGA,EAAIQ,EAAWR,IAC7BW,EAAMvG,KAAKwG,KAAKC,MAAMD,KAAKE,UAAYP,EAAMD,IAAQA,GAGvDhE,KAAKqE,MAAQA,KAMnBN,EAAUU,UAAU3B,KAAO,WACzB,MAAM,IAAIsB,MAAM,gDAIlBL,EAAUU,UAAU1B,SAAW,WAC7B,OAAO/C,KAAKqE,O,ICvBRxB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAAAA,CAAkBkB,GAGxBlB,EAAU4B,UAAU3B,KAAO,SAAUuB,EAAO1C,EAAO+C,EAAQC,EAAaC,GAEtE,GAAIP,EAAMQ,OAAS,EACjB,OAAOR,EAIT1C,EAAM7D,KAAK,GAAKuG,GAChBK,EAAO5G,KAAK,GAAKuG,GACjBM,EAAY7G,KAAK,qBAAuBuG,EAAQ,KAG5CO,IACFjD,EAAM7D,KAAK,GAAKuG,EAAM,IACtBM,EAAY7G,KAAK,aAAeuG,EAAM,IACtCO,GAAO,GAIT,IAAME,EAASR,KAAKC,MAAMF,EAAMQ,OAAS,GAEnCE,EAAaV,EAAMlB,MAAM,EAAG2B,GAC5BE,EAAcX,EAAMlB,MAAM2B,EAAQT,EAAMQ,QAEnB,IAAvBG,EAAYH,SACdD,GAAO,GAIT,IAAMK,EAAYjF,KAAK8C,KAAKiC,EAAYpD,EAAO+C,EAAQC,GACjDO,EAAalF,KAAK8C,KAAKkC,EAAarD,EAAO+C,EAAQC,EAAaC,GAGtE,OAAO5E,KAAKmF,MAAMF,EAAWC,EAAYvD,EAAOgD,IAIlD9B,EAAU4B,UAAUU,MAAQ,SAAUC,EAAMC,EAAO1D,EAAOgD,GAOxD,IANA,IAAIW,EAAM,GAEJC,EAAQC,KAAKC,MAAMD,KAAKE,UAAUN,IAClCO,EAAQH,KAAKC,MAAMD,KAAKE,UAAUL,IAGjCD,EAAKP,QAAUQ,EAAMR,QAC1BS,EAAIxH,KAAKsH,EAAK,GAAKC,EAAM,GAAKD,EAAKQ,QAAUP,EAAMO,SAIrD,KAAOR,EAAKP,QACVS,EAAIxH,KAAKsH,EAAKQ,SAIhB,KAAOP,EAAMR,QACXS,EAAIxH,KAAKuH,EAAMO,SAUjB,OALAjE,EAAM7D,KAAK,GAAKwH,GAChBX,EAAY7G,KACV,YAAcyH,EAAQ,UAAYI,EAAQ,sBAAwBL,EAAM,MAGnEA,GAaT","sources":["components/Pause.jsx","components/LevelComponents/LevelHeader.jsx","components/Modals/EndModal.js","components/Modals/GameoverModal.js","components/Modals/StartModal.js","components/PopupMenu.jsx","components/StepsScroller.jsx","components/LevelComponents/Block.jsx","pages/Users/Levels/LevelOne.js","algorithms/abstractAlgorithm.mjs","algorithms/mergeSort.mjs"],"sourcesContent":["import React from \"react\";\r\n\r\nclass Pause extends React.Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"menu-content\">\r\n        {/* header */}\r\n        <header className=\"box has-text-centered has-background-primary\">\r\n          <p className=\"title is-2 \">Paused</p>\r\n        </header>\r\n        {/* buttons */}\r\n        <div className=\"btns\">\r\n          <div className=\"container\">\r\n            <button\r\n              className=\"m-btn button is-primary is-outlined is-rounded is-large\"\r\n              onClick={() => {\r\n                this.props.close();\r\n              }}\r\n            >\r\n              Resume\r\n            </button>\r\n          </div>\r\n          <div className=\"container\">\r\n            <button\r\n              className=\"m-btn button is-primary is-outlined is-rounded is-large\"\r\n              onClick={() => {\r\n                this.props.restart();\r\n              }}\r\n            >\r\n              Restart\r\n            </button>\r\n          </div>\r\n          <div className=\"container\">\r\n            <button\r\n              className=\"m-btn button is-primary is-outlined is-rounded is-large\"\r\n              onClick={() => {\r\n                this.props.close(\"exit\");\r\n              }}\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pause;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from \"react\";\r\nimport PopupMenu from \"components/PopupMenu\";\r\nimport Pause from \"components/Pause\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\n\r\n// header component for levels\r\nconst LevelHeader = (props) => {\r\n\r\n  // ----- Timer ----- //\r\n  \r\n  // open pause menu\r\n  const toPause = () => {\r\n    PopupMenu.open({\r\n      component: Pause,\r\n      callback: (data) => {\r\n        if (data === \"exit\") {\r\n          props.history.push(\"/ms/select\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n\r\n  // redirect to next level\r\n  const nextLevel = () => {\r\n    if (props.level === \"1\") {\r\n      props.history.push(\"/ms/level2\");\r\n    } else if (props.level === \"2\") {\r\n      props.history.push(\"/ms/level3\");\r\n    } else if (props.level === \"3\") {\r\n      props.history.push(\"/ms/level4\");\r\n    } else if (props.level === \"4\") {\r\n      props.history.push(\"/ms/level5\");\r\n    } else if (props.level === \"5\") {\r\n      props.history.push(\"/ms/custom\");\r\n    } else if (props.level === \"custom\") {\r\n      props.history.push(\"/ms/select\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated\r\n      animationIn=\"fadeInDown\"\r\n      animationOut=\"bounceOut\"\r\n      isVisible={true}\r\n    >\r\n      <div className=\"tabs is-centered is-large is-fullwidth has-background-dark\">\r\n        <ul>\r\n          <li className=\"is-active\">\r\n            <a>\r\n              <span className=\"has-text-primary\">LEVEL {props.level} </span>\r\n            </a>\r\n          </li>\r\n          <li className=\"is-active\">\r\n            <a >\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-clock hvr-buzz\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span>00:00:00</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"is-active hvr-rectangle-in\" onClick={toPause}>\r\n            <a>\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-pause\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span>Pause</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"is-active\">\r\n            <a>\r\n              <span className=\"icon is-small\">\r\n                <i\r\n                  className=\"fas fa-heart has-text-danger hvr-pulse\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n              <span> : 3</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"is-active\">\r\n            <a className=\"hvr-rectangle-out\">\r\n              <span onClick={nextLevel}>Next Level</span>\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fa-solid fa-chevron-right\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Animated>\r\n  );\r\n};\r\n\r\nexport default withRouter(LevelHeader);\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\nconst EndModal = (props) => {\r\n  // get values from props\r\n  const { title, life, time, next } = props;\r\n\r\n  // navigat eto next level based on props\r\n  const toNextLevel = () => {\r\n    if (props.title === 1) {\r\n      props.history.push(\"/ms/level2\");\r\n    } else if (props.title === 2) {\r\n      props.history.push(\"/ms/level3\");\r\n    } else if (props.title === 3) {\r\n      props.history.push(\"/ms/level4\");\r\n    } else if (props.title === 4) {\r\n      props.history.push(\"/ms/level5\");\r\n    } else if (props.title === 5) {\r\n      props.history.push(\"/ms/custom\");\r\n    } else if (props.title === \"C\") {\r\n      props.history.push(\"/alg\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <Animated\r\n        animationIn=\"zoomInUp\"\r\n        animationOut=\"bounceOut\"\r\n        isVisible={true}\r\n      >\r\n        <div className=\"modal-container\">\r\n          {/* modal title */}\r\n          <div className=\"modal-title hvr-pop\">\r\n            <h2 className=\"title is-2 has-text-primary\">\r\n              <i className=\"fa-solid fa-trophy\"></i> Level {title} Completed!\r\n            </h2>\r\n          </div>\r\n\r\n          {/* modal body */}\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <figure className=\"image is-2by1\">\r\n                <img\r\n                  src=\"https://c.tenor.com/O5jZtKfuDRoAAAAd/penguinz0-yeah-baby.gif\"\r\n                  alt=\"Congrats\"\r\n                />\r\n              </figure>\r\n\r\n              {/* level statistics */}\r\n              <nav className=\"level\">\r\n                <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Time Spent:</p>\r\n                    <p className=\"title has-text-danger\">{time}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Lives Left: </p>\r\n                    <p className=\"title has-text-danger\">{life}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Up Next:</p>\r\n                    <p className=\"title has-text-danger\">{next}</p>\r\n                  </div>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          {/* tag / note */}\r\n          <p className=\"tag is-danger is-align-self-center hvr-grow\">\r\n            Note: This Attempt has been logged!\r\n          </p>\r\n\r\n          {/* buttons */}\r\n          <div className=\"modal-footer\">\r\n            <Link to=\"/ms/select\">\r\n              <button className=\"modal-btn button is-primary hvr-sweep-to-left\">\r\n                Select Another Level\r\n              </button>\r\n            </Link>\r\n\r\n            <button\r\n              className=\"modal-btn button is-primary hvr-pulse hvr-sweep-to-right\"\r\n              onClick={toNextLevel}\r\n            >\r\n              Start Next Level\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Animated>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(EndModal);\r\n","import React from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\nconst GameoverModal = (props) => {\r\n  // get values from props\r\n  const { title, dropdownItems, time } = props;\r\n\r\n  // quit game\r\n  const quitGame = () => {\r\n    window.open(\"about:blank\", \"_self\");\r\n    window.close();\r\n    global.auth.logout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <Animated\r\n        animationIn=\"zoomInDown\"\r\n        animationOut=\"bounceOut\"\r\n        isVisible={true}\r\n      >\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-title\">\r\n            <h2 className=\"title is-2 has-text-danger hvr-buzz\">\r\n              <i className=\"fa-solid fa-skull\"></i> Oof! You Died\r\n            </h2>\r\n          </div>\r\n          <div className=\"modal-body \">\r\n            <div>\r\n              <figure className=\"image is-2by1\">\r\n                <img\r\n                  src=\"https://c.tenor.com/L553YL0qcMEAAAAC/halloween-skeletons.gif\"\r\n                  alt=\"oof\"\r\n                />\r\n              </figure>\r\n              <nav className=\"level\">\r\n              <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Level Name:</p>\r\n                    <p className=\"title has-text-danger\">{title }</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Time Spent:</p>\r\n                    <p className=\"title has-text-danger\">{time}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"level-item has-text-centered m-4\">\r\n                  <div>\r\n                    <p className=\"heading has-text-danger\">Lives Left: </p>\r\n                    <p className=\"title has-text-danger\">0</p>\r\n                  </div>\r\n                </div>\r\n                \r\n              </nav>\r\n            </div>\r\n          </div>\r\n          {/* drop up */}\r\n          <div className=\"dropdown is-hoverable is-up is-align-self-center mb-5\">\r\n            <div className=\"dropdown-trigger\">\r\n              <button\r\n                className=\"button is-primary is-outlined is-rounded\"\r\n                aria-haspopup=\"true\"\r\n                aria-controls=\"dropdown-menu\"\r\n              >\r\n                <strong>Stuck? Try playing previous levels again.</strong>\r\n                <span className=\"icon is-small\">\r\n                  <i className=\"fas fa-angle-up\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\r\n              <div className=\"dropdown-content\">\r\n                {/* drop down Items */}\r\n\r\n                {dropdownItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              className=\"modal-btn button is-danger is-outlined hvr-rectangle-in\"\r\n              onClick={() => {\r\n                quitGame();\r\n              }}\r\n            >\r\n              Quit Game\r\n            </button>\r\n            <button\r\n              className=\"modal-btn button is-danger is-outlined hvr-rectangle-in\"\r\n              onClick={() => {\r\n                window.location.reload(false);\r\n              }}\r\n            >\r\n              Restart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Animated>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameoverModal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Animated } from \"react-animated-css\";\r\nconst StartModal = (props) => {\r\n  // get values from props\r\n  const { handleStart, title, body, lowerLimit, upperLimit, boxCount } = props;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <Animated\r\n        animationIn=\"bounceInUp\"\r\n        animationOut=\"bounceOut\"\r\n        isVisible={true}\r\n      >\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-title\">\r\n            <h2 className=\"title is-2 has-text-primary\">\r\n              Welcome to Level {title}\r\n            </h2>\r\n          </div>\r\n          <div className=\"modal-body \">\r\n            <div>\r\n              <strong className=\"has-text-primary\">Level Description:</strong>\r\n              <p className=\"has-text-light mt-3 ml-5\">\r\n                <ol>\r\n                  <li>\r\n                    A set of{\" \"}\r\n                    <span className=\"has-text-primary\">{boxCount}</span> numbers\r\n                    are randomly generated out of the range (\r\n                    <span className=\"has-text-primary\">{lowerLimit}</span> -{\" \"}\r\n                    <span className=\"has-text-primary\">{upperLimit}</span>)\r\n                  </li>\r\n                  {body}\r\n                </ol>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <p className=\"tag is-danger is-align-self-center hvr-buzz\">\r\n            Note: A timer will start when you press Start !\r\n          </p>\r\n          <div className=\"modal-footer\">\r\n            <Link to=\"/ms/select\">\r\n              <button className=\"modal-btn button is-primary hvr-sweep-to-left\">\r\n                Select Another Level\r\n              </button>\r\n            </Link>\r\n            <button\r\n              className=\"modal-btn button is-primary hvr-pulse hvr-sweep-to-right\"\r\n              onClick={handleStart}\r\n            >\r\n              Begin Now!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Animated>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartModal;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n/**\r\n   * popup menu component : \r\n   * used as a container for pause and gameover menu\r\n    (1)、child component can be rendered within the menu\r\n    (2)、child components can close parent component (cancel button)\r\n    (3)、child component can communicate with other components (i.e. restart current level)\r\n */\r\n\r\nclass PopupMenu extends React.Component {\r\n  //popup window state\r\n  state = {\r\n    active: false, //closed by default\r\n    component: null, //empty (no child component by default)\r\n    callback: () => {},\r\n  };\r\n\r\n  // ----- Popup menu functions ----- //\r\n\r\n  //open popup window method\r\n  open = (\r\n    options = {\r\n      props: {},\r\n      component: null,\r\n      callback: () => {},\r\n    }\r\n  ) => {\r\n    const { props, component, callback } = options;\r\n    //key is always different, meaning that a new 'component' is render every time window opened.\r\n    const window_key = new Date().getTime();\r\n    // convert 'component' into a real child component\r\n    const child_component = React.createElement(component, {\r\n      ...props,\r\n      close: this.close,\r\n      restart: this.restart,\r\n      key: window_key,\r\n    });\r\n    this.setState({\r\n      active: true,\r\n      component: child_component,\r\n      callback: callback,\r\n    });\r\n  };\r\n\r\n  //close popup window method\r\n  close = (data) => {\r\n    this.setState({\r\n      active: false,\r\n    });\r\n    // save data on close\r\n    this.state.callback(data);\r\n  };\r\n\r\n  // ----- Pause Menu functions ----- //\r\n\r\n  // restart the level\r\n  restart = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    // toggle between active/inactive using css class\r\n    const _class = {\r\n      true: \"panel-wrapper active\",\r\n      false: \"panel-wrapper\",\r\n    };\r\n\r\n    return (\r\n      <div className={_class[this.state.active]}>\r\n        {/* overlay */}\r\n        <div\r\n          className=\"over-layer\"\r\n          onClick={() => {\r\n            this.close();\r\n          }}\r\n        ></div>\r\n        {/* window*/}\r\n        <div className=\"window\">\r\n          <div className=\"head\">\r\n            {/* close button */}\r\n            <span\r\n              className=\"close\"\r\n              onClick={() => {\r\n                this.close();\r\n              }}\r\n            >\r\n              ×\r\n            </span>\r\n            {/* mounted child component */}\r\n            {this.state.component}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//create an empty div container\r\nconst _div = document.createElement(\"div\");\r\n//render the child component into the popup window component\r\ndocument.body.appendChild(_div);\r\nconst _popup = render(<PopupMenu />, _div);\r\nexport default _popup;\r\n","import React from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\n// component for showing steps\r\nconst StepsScroller = (props) => {\r\n  const {\r\n    lineOne,\r\n    lineTwo,\r\n    lineThree,\r\n    handleReset,\r\n    handleNextStep,\r\n    handlePrevStep,\r\n    enablePrev,\r\n    enableReset,\r\n    enableNext,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"steps-wrapper\">\r\n        {lineOne ? (\r\n          <div className=\"steps-header has-text-primary\">Steps:</div>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n\r\n        <div className=\"steps-list\">\r\n          {lineOne ? <li className=\"step1\">{lineOne}</li> : <span></span>}\r\n          {lineTwo ? <li className=\"step2\">{lineTwo}</li> : <span></span>}\r\n          {lineThree ? <li className=\"step3\">{lineThree}</li> : <span></span>}\r\n        </div>\r\n      </div>\r\n      {/* buttons */}\r\n      <Animated\r\n        animationIn=\"bounceInDown\"\r\n        animationOut=\"bounceOut\"\r\n        isVisible={true}\r\n      >\r\n        <div className=\"control-btns field has-addons\">\r\n          <div className=\"control\">\r\n            {enablePrev ? (\r\n              <button\r\n                className=\"button is-primary is-large p-5 is-outlined\"\r\n                onClick={handlePrevStep}\r\n              >\r\n                <span className=\"icon is-small\">\r\n                  <i className=\"fas fa-angle-left\"></i>\r\n                </span>\r\n                <span>Prev</span>\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"control\">\r\n            {enableReset ? (\r\n              <button\r\n                className=\"button is-primary is-large p-5 is-outlined\"\r\n                onClick={handleReset}\r\n              >\r\n                <span className=\"icon is-small\">\r\n                  <i className=\"fa fa-refresh\"></i>\r\n                </span>\r\n                <span>Reset</span>\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"control\">\r\n            {enableNext ? (\r\n              <button\r\n                className=\"button is-primary is-large p-5 is-outlined\"\r\n                onClick={handleNextStep}\r\n              >\r\n                <span>Next</span>\r\n                <span className=\"icon is-small\">\r\n                  <i className=\"fas fa-angle-right\"></i>\r\n                </span>\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Animated>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepsScroller;\r\n","import React from \"react\";\r\n\r\nexport default function Block(props) {\r\n  let cN = \"box-stuff \";\r\n  if (props.value == null) cN = \"\";\r\n  return (\r\n    <div className={cN} onClick={props.onClick}>\r\n      {props.value}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LevelHeader from \"components/LevelComponents/LevelHeader\";\r\nimport MergeSort from \"algorithms/mergeSort.mjs\";\r\nimport Block from \"components/LevelComponents/Block\";\r\nimport StepsScroller from \"components/StepsScroller\";\r\nimport StartModal from \"components/Modals/StartModal\";\r\nimport GameoverModal from \"components/Modals/GameoverModal\";\r\nimport EndModal from \"components/Modals/EndModal\";\r\n\r\nclass LevelOne extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playButton: true,\r\n      step: 0,\r\n      instructions: [],\r\n      boxes: Array(11).fill(null),\r\n      boxIndex: [1, 2, 4, 4, 5, 8, 9, 9, 5, 2, 3, 6, 6, 7, 10, 11, 11, 7, 3, 1],\r\n      order: [],\r\n      // ------ Modal States ----- //\r\n      showModal: true, //enable modal rendering\r\n      showStartModal: true, //show start level modal by default\r\n      showEndModal: false, //dont show endModal by default\r\n      showGameoverModal: false, //dont show gameover Modal by default\r\n\r\n      // ----- Game State ----- //\r\n      level: 1,\r\n      lives: 3,\r\n      time: 0,\r\n      lowerLimit: 1,\r\n      upperLimit: 20,\r\n      boxCount: 10,\r\n    };\r\n\r\n    this.generateArray = this.generateArray.bind(this);\r\n    this.handleNextStep = this.handleNextStep.bind(this);\r\n    this.handlePrevStep = this.handlePrevStep.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.generateBlocks = this.generateBlocks.bind(this);\r\n    this.handleStart = this.handleStart.bind(this);\r\n    this.handleEnd = this.handleEnd.bind(this);\r\n    this.handleGameover = this.handleGameover.bind(this);\r\n  }\r\n\r\n  //** Modal Related functions **/\r\n  // execute when start button on the modal is pressed\r\n  handleStart() {\r\n    // generate new array\r\n    this.generateArray();\r\n    // hide start modal\r\n    this.setState({ showModal: false, showStartModal: false });\r\n    // start timer\r\n  }\r\n\r\n  // executes when the level ends\r\n  handleEnd() {\r\n    // end timer\r\n    // show end modal\r\n    this.setState({\r\n      showModal: true,\r\n      showEndModal: true,\r\n      showGameoverModal: false,\r\n    });\r\n\r\n    // save (username, time, remaining lives, completion date as logged data)\r\n  }\r\n\r\n  // executes when player life reaches 0\r\n  handleGameover() {\r\n    // end timer\r\n    // show gameover modal\r\n    this.setState({\r\n      showModal: true,\r\n      showEndModal: false,\r\n      showGameoverModal: true,\r\n    });\r\n    // save (username, time, remaining lives, completion date as logged data)\r\n  }\r\n\r\n  // render the appropriate modal based on current game state\r\n  renderModal() {\r\n    const StartModalBody = () => {\r\n      // modal content\r\n      return (\r\n        <div>\r\n          <li>\r\n            The steps of the algorithm would be executed as visual animation\r\n            accompanied with explanation texts\r\n          </li>\r\n          <li>Navigate through the steps using the step player.</li>\r\n        </div>\r\n      );\r\n    };\r\n\r\n\r\n    // if `showStartModal` state is true\r\n    if (this.state.showStartModal) {\r\n      return (\r\n        //show level start modal\r\n        <StartModal\r\n          handleStart={this.handleStart}\r\n          title={this.state.level}\r\n          body={<StartModalBody />}\r\n          lowerLimit={this.state.lowerLimit}\r\n          upperLimit={this.state.upperLimit}\r\n          boxCount={this.state.boxCount}\r\n        />\r\n      );\r\n      // if `showEndModal` state is true\r\n    } else if (this.state.showEndModal && !this.state.showGameoverModal) {\r\n      return (\r\n        <EndModal\r\n          title={this.state.level}\r\n          life={this.state.lives}\r\n          time={this.state.time}\r\n          next=\"Level 2\"\r\n        />\r\n      );\r\n    } else if (this.state.showGameoverModal && !this.state.showEndModal) {\r\n      return (\r\n        // show gameover modal\r\n        <GameoverModal\r\n          title={this.state.level}\r\n          time={this.state.time}\r\n          \r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  //creates array at the rendering of the class\r\n  generateArray() {\r\n    let currentOrd = [];\r\n    let currentInstr = [];\r\n    var sorting = new MergeSort(1, 20, 10);\r\n    // console.log(sorting);\r\n    sorting.sort(sorting.getArray(), currentOrd, [], currentInstr, false);\r\n    //retrieves array of instructions and order of steps\r\n    this.setState({\r\n      order: currentOrd,\r\n      instructions: currentInstr,\r\n    });\r\n  }\r\n\r\n  //sets order\r\n  setOrder(val) {\r\n    this.setState({ order: val });\r\n  }\r\n\r\n  //reset button handling\r\n  handleReset(e) {\r\n    const box = Array(11).fill(null);\r\n    let step = 0;\r\n    this.setState({\r\n      step: step,\r\n      boxes: box,\r\n      lineOne: null,\r\n      lineTwo: null,\r\n      lineThree: null,\r\n    });\r\n  }\r\n\r\n  //handles next step\r\n  handleNextStep(e) {\r\n    const box = this.state.boxes.slice();\r\n    var step = this.state.step; //block order to retrieve\r\n    const currentBox = this.state.boxIndex[step] - 1;\r\n    box[currentBox] = this.state.order[step];\r\n    // console.log(box);\r\n    step++;\r\n    this.setState({\r\n      boxes: box,\r\n      step: step,\r\n      lineOne: this.state.instructions[step - 1],\r\n      lineTwo: this.state.instructions[step],\r\n      lineThree: this.state.instructions[step + 1],\r\n    });\r\n  }\r\n\r\n  // handle previous step\r\n  handlePrevStep(e) {\r\n    const box = this.state.boxes.slice();\r\n    var step = this.state.step; //block order to retrieve\r\n    const currentBox = this.state.boxIndex[step] + 1;\r\n    box[currentBox] = this.state.order[step];\r\n    // console.log(box);\r\n    step--;\r\n    this.setState({\r\n      boxes: box,\r\n      step: step,\r\n      lineOne: this.state.instructions[step + 1],\r\n      lineTwo: this.state.instructions[step],\r\n      lineThree: this.state.instructions[step - 1],\r\n    });\r\n  }\r\n\r\n  generateBlocks() {\r\n    const order = this.state.order.slice()[0];\r\n    if (order !== undefined) {\r\n      let temp = order.split(\",\");\r\n      temp.map((element) => {\r\n        console.log(element);\r\n        return <Block value={element} />;\r\n      });\r\n    }\r\n  }\r\n\r\n  //rendering block with the state of the box\r\n  renderBlock(i) {\r\n    return <Block value={this.state.boxes[i - 1]} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showModal ? (\r\n          this.renderModal()\r\n        ) : (\r\n          <div>\r\n            <div className=\"header mb-6\">\r\n              <LevelHeader level=\"1\" />\r\n              {/* !!!!!modal testing */}\r\n              <div className=\"box is-pink\">\r\n                  <h2>For Developer Only</h2>\r\n                  <button\r\n                    className=\"button is-success is-outlined\"\r\n                    onClick={this.handleEnd}\r\n                  >\r\n                    level complete\r\n                  </button>\r\n                  <button\r\n                    className=\"button is-danger is-outlined\"\r\n                    onClick={this.handleGameover}\r\n                  >\r\n                    gameover\r\n                  </button>\r\n                </div>\r\n                {/* !!!!!modal testing */}\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n              {/* {this.generateBlocks()} */}\r\n              <div className=\"box-surround\">\r\n                <div id=\"top\">{this.renderBlock(1)}</div>\r\n                <div id=\"second\">\r\n                  {this.renderBlock(2)}\r\n                  {this.renderBlock(3)}\r\n                </div>\r\n                <div id=\"third\">\r\n                  {this.renderBlock(4)}\r\n                  {this.renderBlock(5)}\r\n                  {this.renderBlock(6)}\r\n                  {this.renderBlock(7)}\r\n                </div>\r\n                <div id=\"fourth\">\r\n                  <Block />\r\n                  <Block />\r\n                  {this.renderBlock(8)}\r\n                  {this.renderBlock(9)}\r\n                  <Block />\r\n                  <Block />\r\n                  {this.renderBlock(10)}\r\n                  {this.renderBlock(11)}\r\n                </div>\r\n              </div>\r\n              <div className=\"alg-steps\">\r\n                <StepsScroller\r\n                  lineOne={this.state.lineOne}\r\n                  lineTwo={this.state.lineTwo}\r\n                  lineThree={this.state.lineThree}\r\n                  handleReset={this.handleReset}\r\n                  handleNextStep={this.handleNextStep}\r\n                  handlePrevStep={this.handlePrevStep}\r\n                  enablePrev={true}\r\n                  enableReset={true}\r\n                  enableNext={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LevelOne;\r\n","export default class Algorithm {\r\n  constructor(min, max, arraySize) {\r\n    //Make sure the constructor is not the Algorithm class.\r\n    if (this.constructor === Algorithm) {\r\n      throw new Error(\"Instantiating an abstract class is a no no.\");\r\n    } else {\r\n      //Use the constructor to generate an array, use the indicated min, max, and size\r\n      let array = [];\r\n\r\n      for (let i = 0; i < arraySize; i++) {\r\n        array.push(Math.floor(Math.random() * (max - min)) + min);\r\n      }\r\n\r\n      this.array = array;\r\n    }\r\n  }\r\n}\r\n\r\n//Create the prototype for sort, every sorting algorithm will sort, so this will be overwritten.\r\nAlgorithm.prototype.sort = function () {\r\n  throw new Error(\"This is an abstract method.... come on bro.\");\r\n};\r\n\r\n//Return the array. This is the array that is to be sorted. This will not be overwritten.\r\nAlgorithm.prototype.getArray = function () {\r\n  return this.array;\r\n};\r\n","import Algorithm from \"./abstractAlgorithm.mjs\";\r\n\r\nclass MergeSort extends Algorithm {}\r\n\r\n//The function that is called\r\nMergeSort.prototype.sort = function (array, order, orderS, instruction, flag) {\r\n  //Determine if array needs to be cut in half\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n\r\n  //Track iteration\r\n  order.push(\"\" + array);\r\n  orderS.push(\"\" + array);\r\n  instruction.push(\"Half this array: [\" + array + \"]\");\r\n\r\n  //Record single digit arrays using a flag\r\n  if (flag) {\r\n    order.push(\"\" + array[0]);\r\n    instruction.push(\"Store the \" + array[0]);\r\n    flag = false;\r\n  }\r\n\r\n  //Half the given array\r\n  const middle = Math.floor(array.length / 2);\r\n\r\n  const array_left = array.slice(0, middle);\r\n  const array_right = array.slice(middle, array.length);\r\n\r\n  if (array_right.length === 3) {\r\n    flag = true;\r\n  }\r\n\r\n  //Send array back to determine if it needs to be halved again\r\n  const sort_left = this.sort(array_left, order, orderS, instruction);\r\n  const sort_right = this.sort(array_right, order, orderS, instruction, flag);\r\n\r\n  //Merge the masses!!!\r\n  return this.merge(sort_left, sort_right, order, instruction);\r\n};\r\n\r\n//To merge arrays backtogether\r\nMergeSort.prototype.merge = function (left, right, order, instruction) {\r\n  let arr = [];\r\n\r\n  const tempL = JSON.parse(JSON.stringify(left));\r\n  const tempR = JSON.parse(JSON.stringify(right));\r\n\r\n  //Add the smaller leading value to the sorted array\r\n  while (left.length && right.length) {\r\n    arr.push(left[0] < right[0] ? left.shift() : right.shift());\r\n  }\r\n\r\n  //Add the rest of the array\r\n  while (left.length) {\r\n    arr.push(left.shift());\r\n  }\r\n\r\n  //Add the rest of the array\r\n  while (right.length) {\r\n    arr.push(right.shift());\r\n  }\r\n\r\n  // console.log(arr);\r\n  //Track iteration\r\n  order.push(\"\" + arr);\r\n  instruction.push(\r\n    \"Combine [\" + tempL + \"] and [\" + tempR + \"] in order to get [\" + arr + \"].\"\r\n  );\r\n\r\n  return arr;\r\n};\r\n\r\n//Template on how to use the above class\r\n\r\n// var sorting = new MergeSort(1, 20, 10);\r\n// let order = [];\r\n// let instruction = [];\r\n// let sorted = sorting.sort(sorting.getArray(), order, instruction, false);\r\n\r\n// console.log(order);\r\n// console.log(instruction);\r\n\r\nexport default MergeSort;\r\n"],"names":["Pause","className","onClick","props","close","restart","React","withRouter","animationIn","animationOut","isVisible","level","PopupMenu","component","callback","data","history","push","title","life","time","next","src","alt","to","dropdownItems","id","role","window","open","global","auth","logout","location","reload","handleStart","body","lowerLimit","upperLimit","boxCount","state","active","options","window_key","Date","getTime","child_component","key","setState","true","false","this","_div","document","createElement","appendChild","_popup","render","lineOne","lineTwo","lineThree","handleReset","handleNextStep","handlePrevStep","enablePrev","enableReset","enableNext","Block","cN","value","LevelOne","playButton","step","instructions","boxes","Array","fill","boxIndex","order","showModal","showStartModal","showEndModal","showGameoverModal","lives","generateArray","bind","generateBlocks","handleEnd","handleGameover","StartModalBody","StartModal","EndModal","GameoverModal","currentOrd","currentInstr","sorting","MergeSort","sort","getArray","val","e","box","slice","undefined","split","map","element","console","log","i","renderModal","LevelHeader","renderBlock","StepsScroller","Algorithm","min","max","arraySize","constructor","Error","array","Math","floor","random","prototype","orderS","instruction","flag","length","middle","array_left","array_right","sort_left","sort_right","merge","left","right","arr","tempL","JSON","parse","stringify","tempR","shift"],"sourceRoot":""}