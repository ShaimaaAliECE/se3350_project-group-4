{"version":3,"file":"static/js/490.c3646304.chunk.js","mappings":"yRAmJA,UAzIc,SAACA,GAEb,OAIIC,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAITE,EAAQ,mCAAG,WAAOC,GAAP,+FAGLC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAHL,SAKKC,EAAAA,EAAAA,KAAW,cAAe,CAAEF,SAAAA,EAAUC,SAAAA,IAL3C,OAKPE,EALO,OAMPC,EAAUD,EAAIJ,KACpBM,QAAQC,IAAIF,GAEZG,EAAAA,EAAOC,KAAKC,SAASL,GAErBM,EAAAA,GAAAA,QAAc,oBAEdlB,EAAMmB,QAAQC,KAAK,QAbN,kDAebP,QAAQC,IAAI,KAAMO,SAASd,MACrBe,EAAU,KAAMD,SAASd,KAAKe,QAEpCJ,EAAAA,GAAAA,MAAYI,GAlBC,0DAAH,sDA0Bd,OACE,0BAEE,UAAC,IAAD,CAAUC,YAAY,aAAaC,aAAa,SAASC,WAAW,EAApE,WACE,SAACC,EAAD,KACA,gBAAKC,UAAU,gBAAf,UACE,kBAAMA,UAAU,YAAYrB,SAAUH,EAAaG,GAAnD,WACE,eAAIqB,UAAU,4BAAd,oBAEA,iBAAKA,UAAU,QAAf,WACE,kBAAOA,UAAU,6CAAjB,uBAGA,iBAAKA,UAAU,UAAf,WACE,0BACEA,UAAS,0BACPvB,EAAOI,UAAY,aAErBoB,KAAK,OACLC,YAAY,WACZC,KAAK,YAED5B,EAAS,WAAY,CACvB6B,SAAU,uBACVC,QAAS,CAEPC,MAAO,+BACPX,QAAS,sCAEXY,UAAW,CACTD,MAAO,EACPX,QAAS,2CAEXa,UAAW,CACTF,MAAO,GACPX,QAAS,iDAKdlB,EAAOI,WACN,cAAGmB,UAAU,yBAAb,SACGvB,EAAOI,SAASc,iBAMzB,iBAAKK,UAAU,aAAf,WACE,kBAAOA,UAAU,6CAAjB,uBAGA,iBAAKA,UAAU,UAAf,WACE,0BACEA,UAAS,0BACPvB,EAAOK,UAAY,aAErBmB,KAAK,WACLC,YAAY,WACZC,KAAK,YAED5B,EAAS,WAAY,CACvB6B,SAAU,wBACVG,UAAW,CACTD,MAAO,EACPX,QAAS,+CAKdlB,EAAOK,WACN,cAAGkB,UAAU,yBAAb,SACGvB,EAAOK,SAASa,iBAMzB,gBAAKK,UAAU,UAAf,UACE,SAAC,WAAD,CACES,SAAU,CACRC,MAAO,IAETV,UAAU,gFACVW,QAAS,WAvFrB,IAAIC,MAAMC,GAAYC,QAkFZ,uBAaF,gBAAKd,UAAU,oEAAf,UACE,SAAC,KAAD,CAAMe,GAAG,YAAYf,UAAU,iBAA/B,oEAYP,IAAMD,EAAc,WACzB,OACE,4BACE,gBAAKC,UAAU,cAAf,UACE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,QAAf,UAEE,SAAC,KAAD,CAAMe,GAAG,IAAIf,UAAU,oBAAvB,UACE,+BACE,cAAGA,UAAU,2BADf,oBAOR,gBAAKA,UAAU,iB,yBClKNgB,E,mBAWf,IAVmBC,IAAAA,OAAc,CAC7BD,QAASA,GAAWE,wBACpBC,QAAS,O","sources":["pages/Login.js","utils/axios.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"utils/axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport clickSound from \"assets/audios/ClickSound2.mp3\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Login Page\r\nconst Login = (props) => {\r\n  // react-hook-form component used to validate user input\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // submit login form function\r\n  const onSubmit = async (data) => {\r\n    //Login function implementation\r\n    try {\r\n      const { username, password } = data;\r\n      //verify user information\r\n      const res = await axios.post(\"/auth/login\", { username, password });\r\n      const jwToken = res.data;\r\n      console.log(jwToken);\r\n      // save jwToken in local storage\r\n      global.auth.setToken(jwToken);\r\n      // show login success message\r\n      toast.success(\"Login Successful\");\r\n      //redirect to select algorithm page\r\n      props.history.push(\"/alg\");\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      const message = error.response.data.message;\r\n      // show login failed message\r\n      toast.error(message);\r\n    }\r\n  };\r\n\r\n  function playSound() {\r\n    new Audio(clickSound).play();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* header */}\r\n      <Animated animationIn=\"fadeInLeft\" animationOut=\"bounce\" isVisible={true}>\r\n        <LoginHeader />\r\n        <div className=\"login-wrapper\">\r\n          <form className=\"login-box\" onSubmit={handleSubmit(onSubmit)}>\r\n            <h4 className=\"title is-2 has-text-light\">Login</h4>\r\n            {/* username */}\r\n            <div className=\"field\">\r\n              <label className=\"label has-text-white has-text-weight-light\">\r\n                Username\r\n              </label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className={`input is-size-5 ${\r\n                    errors.username && \"is-danger\"\r\n                  }`}\r\n                  type=\"text\"\r\n                  placeholder=\"username\"\r\n                  name=\"username\"\r\n                  // username input form validation\r\n                  {...register(\"username\", {\r\n                    required: \"username is required\", //can't be empty\r\n                    pattern: {\r\n                      // must start with A-Z or a-z, and be 5-20 characters in length\r\n                      value: /^[A-Za-z][A-Za-z0-9_]{4,21}$/,\r\n                      message: \"username must start with a letter.\",\r\n                    },\r\n                    minLength: {\r\n                      value: 5, // at least 5 characters\r\n                      message: \"username must be at least 5 characters.\",\r\n                    },\r\n                    maxLength: {\r\n                      value: 20, // at most 20 characters\r\n                      message: \"username must be less than 20 characters.\",\r\n                    },\r\n                  })}\r\n                />\r\n                {/* username input helper message */}\r\n                {errors.username && (\r\n                  <p className=\"helper has-text-danger\">\r\n                    {errors.username.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* password */}\r\n            <div className=\"field mb-6\">\r\n              <label className=\"label has-text-white has-text-weight-light\">\r\n                Password\r\n              </label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className={`input is-size-5 ${\r\n                    errors.password && \"is-danger\"\r\n                  }`}\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  name=\"password\"\r\n                  // password input form validation\r\n                  {...register(\"password\", {\r\n                    required: \"password is required.\", //can't be empty\r\n                    minLength: {\r\n                      value: 6, // at least 5 characters\r\n                      message: \"password must be at least 6 characters.\",\r\n                    },\r\n                  })}\r\n                />\r\n                {/* password input helper message */}\r\n                {errors.password && (\r\n                  <p className=\"helper has-text-danger\">\r\n                    {errors.password.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* LOG In button */}\r\n            <div className=\"control\">\r\n              <motion.button\r\n                whileTap={{\r\n                  scale: 0.9,\r\n                }}\r\n                className=\"button is-fullwidth is-primary has-text-weight-bold is-size-5 hvr-outline-out\"\r\n                onClick={() => {\r\n                  playSound();\r\n                }}\r\n              >\r\n                LOG IN\r\n              </motion.button>\r\n            </div>\r\n            {/* link to register */}\r\n            <div className=\"label has-text-white has-text-weight-light has-text-centered mt-2\">\r\n              <Link to=\"/register\" className=\"hvr-pulse-grow\">Donâ€™t have an account? Register here</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Animated>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// Header component for login and register page\r\nexport const LoginHeader = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"back-header\">\r\n        <div className=\"grid\">\r\n          <div className=\"start\">\r\n            {/* Back to home page */}\r\n            <Link to=\"/\" className=\"hvr-skew-backward\">\r\n              <strong>\r\n                <i className=\"fa-solid fa-arrow-left\"></i> Back\r\n              </strong>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import _axios from \"axios\";\r\n\r\n// change the base url when sending axios requests\r\nconst axios = (baseURL) => {\r\n  const instance = _axios.create({\r\n    baseURL: baseURL || process.env.REACT_APP_API_DOMAIN ||\"http://localhost:3001\",\r\n    timeout: 1000,\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport { axios };\r\n\r\nexport default axios();\r\n"],"names":["props","useForm","register","handleSubmit","errors","formState","onSubmit","data","username","password","axios","res","jwToken","console","log","global","auth","setToken","toast","history","push","response","message","animationIn","animationOut","isVisible","LoginHeader","className","type","placeholder","name","required","pattern","value","minLength","maxLength","whileTap","scale","onClick","Audio","clickSound","play","to","baseURL","_axios","process","timeout"],"sourceRoot":""}